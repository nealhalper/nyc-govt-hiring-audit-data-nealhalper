version: '3.8'

services:
  # Development Container
  devcontainer:
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
    container_name: nyc_audit_devcontainer
    volumes:
      - .:/workspace:cached
      - vscode-server:/home/vscode/.vscode-server
      - bashhistory:/home/vscode/commandhistory
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=nyc_hiring_audit
      - POSTGRES_USER=airflow_user
      - POSTGRES_PASSWORD=airflow_password
      - POSTGRES_PORT=5432
      - PYTHONPATH=/workspace
      - DBT_PROFILES_DIR=/workspace/.dbt
    networks:
      - audit_network
    depends_on:
      postgres:
        condition: service_healthy
    command: sleep infinity

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: nyc_audit_postgres_dev
    environment:
      POSTGRES_DB: nyc_hiring_audit
      POSTGRES_USER: airflow_user
      POSTGRES_PASSWORD: airflow_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./airflow/sql:/docker-entrypoint-initdb.d
      - ./dbt/seeds:/var/lib/postgresql/seeds
    networks:
      - audit_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow_user -d nyc_hiring_audit"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (optional for Airflow)
  redis:
    image: redis:7-alpine
    container_name: nyc_audit_redis_dev
    ports:
      - "6379:6379"
    networks:
      - audit_network
    restart: unless-stopped

volumes:
  postgres_data_dev:
  vscode-server:
  bashhistory:

networks:
  audit_network:
    driver: bridge
