version: '3.8'
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: nyc_audit_postgres
    environment:
      POSTGRES_DB: nyc_hiring_audit
      POSTGRES_USER: airflow_user
      POSTGRES_PASSWORD: airflow_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./airflow/sql:/docker-entrypoint-initdb.d
    networks:
      - airflow_network
    restart: always

  # Redis (for Airflow Celery)
  redis:
    image: redis:latest
    container_name: nyc_audit_redis
    ports:
      - "6379:6379"
    networks:
      - airflow_network
    restart: always

  # Airflow Webserver
  airflow-webserver:
    build: 
      context: .
      dockerfile: docker/Dockerfile.airflow
    container_name: nyc_audit_airflow_webserver
    command: airflow webserver
    ports:
      - "8080:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow_user:airflow_password@postgres:5432/nyc_hiring_audit
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
      AIRFLOW__WEBSERVER__RBAC: 'true'
      AIRFLOW__CORE__FERNET_KEY: 'your-fernet-key-here-32-chars-long'
      PYTHONPATH: '/opt/airflow/workspace'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/sql:/opt/airflow/sql
      - ./airflow/scripts:/opt/airflow/scripts
      - .:/opt/airflow/workspace
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - postgres
      - redis
    networks:
      - airflow_network
    restart: always

  # Airflow Scheduler
  airflow-scheduler:
    build: 
      context: .
      dockerfile: docker/Dockerfile.airflow
    container_name: nyc_audit_airflow_scheduler
    command: airflow scheduler
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow_user:airflow_password@postgres:5432/nyc_hiring_audit
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__FERNET_KEY: 'your-fernet-key-here-32-chars-long'
      PYTHONPATH: '/opt/airflow/workspace'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/sql:/opt/airflow/sql
      - ./airflow/scripts:/opt/airflow/scripts
      - .:/opt/airflow/workspace
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - postgres
      - redis
    networks:
      - airflow_network
    restart: always

  # Airflow Init (run once to setup database)
  airflow-init:
    build: 
      context: .
      dockerfile: docker/Dockerfile.airflow
    container_name: nyc_audit_airflow_init
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin
      "
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow_user:airflow_password@postgres:5432/nyc_hiring_audit
      AIRFLOW__CORE__FERNET_KEY: 'your-fernet-key-here-32-chars-long'
      PYTHONPATH: '/opt/airflow/workspace'
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/sql:/opt/airflow/sql
      - ./airflow/scripts:/opt/airflow/scripts
      - .:/opt/airflow/workspace
      - airflow_logs:/opt/airflow/logs
    depends_on:
      - postgres
      - redis
    networks:
      - airflow_network
    profiles:
      - init

volumes:
  postgres_data:
  airflow_logs:

networks:
  airflow_network:
    driver: bridge
